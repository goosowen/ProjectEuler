#!/usr/bin/env python
# -*- coding: utf-8 -*- 
'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?


'''
import math

def main():
	pentagonals = []
	lowest_diff = float("inf")
	for n in xrange(1, 50001):
		pentagonal = n*(3*n - 1)/2
		pentagonals.append(pentagonal)

	pents = set(pentagonals)

	for i in xrange(1, 30000):
		pentagonal = pentagonals[i]
		last_diff = pentagonal - pentagonals[i-1]
		if last_diff > lowest_diff:
			print "lowest diff possible: ", lowest_diff
			return

		# print pentagonal, [p for p in reversed(pentagonals[:i])]
		for other_pentagonal in reversed(pentagonals[:i]):
			diff = pentagonal - other_pentagonal
			if diff > lowest_diff:
				break

			summ = pentagonal + other_pentagonal
			if diff in pents and summ in pents:
				print pentagonal, other_pentagonal
				lowest_diff = diff

			if summ > pentagonals[-1]:
				print "need more"
				return

	print "didn't finish, lowest diff so far:", lowest_diff

if __name__ == "__main__": main()
